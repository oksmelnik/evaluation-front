var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import * as React from 'react';
import SwipeableViews from 'react-swipeable-views';
import { virtualize } from 'react-swipeable-views-utils';
import { withStyles } from 'material-ui/styles';
var VirtualizedSwipeableViews = virtualize(SwipeableViews);
var styles = function (theme) { return ({
    clockContainer: {
        padding: '16px'
    },
    clockBackground: {
        width: '250px',
        height: '250px',
        borderRadius: '140px',
        position: 'relative',
        background: theme.palette.background.default,
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center'
    },
    clockText: {
        position: 'absolute',
        userSelect: 'none'
    },
    clockHandContainer: {
        position: 'absolute',
        width: '2px'
    },
    clockHand: {
        width: '100%',
        height: '100%',
        backgroundColor: theme.palette.primary.main
    },
    clockHandBottom: {
        width: '8px',
        height: '8px',
        borderRadius: '4px',
        backgroundColor: theme.palette.primary.main
    }
}); };
var Calendar = /** @class */ (function (_super) {
    __extends(Calendar, _super);
    function Calendar(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            mode: 'hour'
        };
        return _this;
    }
    Calendar.prototype.render = function () {
        var _a = this.props, classes = _a.classes, value = _a.value;
        var mode = this.state.mode;
        if (mode === 'hour') {
            var numbers_1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
            var radius_1 = 100;
            return (React.createElement("div", { key: 'calendar-month', className: classes.clockContainer },
                React.createElement("div", { className: classes.clockBackground },
                    React.createElement("div", { className: classes.clockHandContainer, style: { height: radius_1, paddingBottom: radius_1 } },
                        React.createElement("div", { className: classes.clockHand })),
                    React.createElement("div", { className: classes.clockHandBottom }),
                    numbers_1.map(function (number, index) {
                        var angle = index / numbers_1.length * 2 * Math.PI - (Math.PI / 3 * 1);
                        return React.createElement("div", { className: classes.clockText, style: { transform: "translate(" + radius_1 * Math.cos(angle) + "px, " + radius_1 * Math.sin(angle) + "px)" } }, number);
                    }))));
        }
        else {
            return React.createElement("div", null);
        }
    };
    Calendar = __decorate([
        withStyles(styles)
    ], Calendar);
    return Calendar;
}(React.Component));
export default Calendar;
//# sourceMappingURL=clock.js.map