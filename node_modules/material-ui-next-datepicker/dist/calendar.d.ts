/// <reference types="react" />
import * as React from 'react';
import { StyledComponentProps } from 'material-ui/styles';
declare class Calendar extends React.Component<CalendarProps, CalendarState> {
    updateHeight: {
        month: () => void;
        year: () => void;
    };
    constructor(props: any);
    componentDidMount(): void;
    componentWillUnmount(): void;
    resize: () => void;
    selectDate: (date: Date) => void;
    showYearsCalendar: () => void;
    selectCalendarYear: (year?: number) => void;
    previousYearsValid: () => boolean;
    previousYears: () => void;
    nextYearsValid: () => boolean;
    nextYears: () => void;
    changeYears: (index: any) => void;
    yearInvalid: (currentYear: number) => boolean;
    previousMonthValid: () => boolean;
    previousMonth: () => void;
    nextMonthValid: () => boolean;
    nextMonth: () => void;
    changeMonth: (index: any) => void;
    dayInvalid: (date: Date) => boolean;
    generateYearCalendar: (index: number) => number[][];
    generateMonthCalendar: (index: number) => Date[][];
    render(): JSX.Element;
}
export interface CalendarProps extends React.Props<{}>, StyledComponentProps {
    value: Date;
    onChange: (value: Date) => void;
    min?: Date;
    max?: Date;
    dialog?: boolean;
}
export interface CalendarState {
    mode: 'year' | 'month';
    month: number;
    year: number;
    yearIndex: number;
}
export default Calendar;
